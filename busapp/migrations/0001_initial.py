# Generated by Django 4.0.3 on 2022-03-27 15:00

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('passenger_name', models.CharField(max_length=40)),
                ('date', models.DateField(auto_now_add=True)),
                ('time', models.TimeField(blank=True)),
                ('bus_name', models.CharField(blank=True, max_length=10)),
                ('starting_point', models.CharField(blank=True, max_length=130)),
                ('destination', models.CharField(blank=True, max_length=130)),
                ('seat_no', models.CharField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (
                    5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], max_length=3)),
                ('bus_no', models.IntegerField(blank=True)),
                ('payment_method', models.CharField(choices=[('ESEWA', 'ESEWA'), (
                    'KHALTI', 'KHALTI'), ('ON_HAND', 'ON_HAND')], default='ON_HAND', max_length=10)),
                ('ticket_price', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('bus_no', models.IntegerField()),
                ('bus_name', models.CharField(choices=[
                 ('MAYUR', 'MAYUR'), ('NEPAL', 'NEPAL'), ('DIGO', 'DIGO')], max_length=80)),
                ('exit_time', models.TimeField()),
                ('starting_point', models.CharField(choices=[('RATNAPARK', 'RATNAPARK'), ('RNAC', 'RNAC'), (
                    'KOTESHAWOR', 'KOTESHAWOR'), ('BANEPA', 'BANEPA'), ('SANGA', 'SANBA'), ('DHULIKHEL', 'DHULIKHEL')], max_length=10)),
                ('destination', models.CharField(choices=[('BANEPA', 'BANEPA'), ('SANGA', 'SANBA'), ('DHULIKHEL', 'DHULIKHEL'), (
                    'RATNAPARK', 'RATNAPAfrom django.contrib.auth.mixins import LoginRequiredMixin, UserPassesTestMixinRK'), ('RNAC', 'RNAC'), ('KOTESHAWOR', 'KOTESHAWOR')], max_length=10)),
                ('ticket_price', models.IntegerField()),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('contact', models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('route', models.CharField(choices=[
                 ('ARANIKO', 'ARANIKO'), ('PUSPALAL', 'PUSPALAL'), ('PASANG', 'PASANG')], max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='BusSeatAllocated',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_no', models.IntegerField()),
                ('bus_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='bus_seat_allocated', to='busapp.bus')),
            ],
        ),
        migrations.AddField(
            model_name='bus',
            name='driver_name',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='driver', to='busapp.driver'),
        ),
        migrations.AddField(
            model_name='bus',
            name='route_id',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='route_id', to='busapp.route'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(
                    max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(
                    blank=True, null=True, verbose_name='last login')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False,
                 unique=True, verbose_name='Public identifier')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=50)),
                ('role', models.PositiveSmallIntegerField(blank=True, choices=[
                 (1, 'Admin'), (2, 'DRIVER'), (3, 'CUSTOMER')], default=3, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(
                    default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                 related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                 related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
    ]
